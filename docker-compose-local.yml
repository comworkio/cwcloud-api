version: '3.3'
services:
  comwork_cloud_api:
    restart: always
    image: comwork_cloud_api:latest
    container_name: comwork_cloud_api
    networks:
      - cloud_api
    build:
      context: .
      dockerfile: ./Dockerfile
      target: api
    env_file: 
      - .env
    ports:
      - "8000:5000"
    volumes:
      - ./cloud_environments_local.yml:/app/cloud_environments.yml
    depends_on:
      - comwork_cloud_cache
      - comwork_cloud_nats
      - comwork_cloud_db
      - comwork_cloud_migrate
  comwork_cloud_cache:
    image: redis:6.2.6
    restart: always
    container_name: comwork_cloud_cache_ppd
    networks:
      - cloud_api
  comwork_cloud_nats:
    image: nats:2.9.20
    container_name: comwork_cloud_nats
    ports:
      - 8222:8222
    command: "--cluster_name NATS --cluster nats://0.0.0.0:6222 --http_port 8222 "
    networks:
      - cloud_api
  comwork_cloud_migrate:
    image: flyway/flyway:7.15.0
    container_name: comwork_cloud_migrate
    command: -mixed=true -url="jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}" -user="${POSTGRES_USER}" -password="${POSTGRES_PASSWORD}" migrate
    volumes:
      - ./src/migrations:/flyway/sql
    env_file:
      - .env
    depends_on:
      - comwork_cloud_db
    networks:
      - cloud_api
  comwork_cloud_db:
    image: postgres:13
    container_name: comwork_cloud_db
    ports:
      - 5432:5432
    restart: always
    volumes:
      - cwclouddata:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - cloud_api
  comwork_cloud_consumer:
    restart: always
    image: comwork_cloud_consumer:latest
    container_name: comwork_cloud_consumer
    build:
      context: .
      dockerfile: ./Dockerfile
      target: consumer
    volumes:
      - ./cloud_environments_local.yml:/app/cloud_environments.yml
    env_file:
      - .env
    depends_on:
      - comwork_cloud_api
    networks:
      - cloud_api
  comwork_cloud_scheduler:
    restart: always
    image: comwork_cloud_scheduler:latest
    container_name: comwork_cloud_scheduler
    build:
      context: .
      dockerfile: ./Dockerfile
      target: scheduler
    volumes:
      - ./cloud_environments_local.yml:/app/cloud_environments.yml
    env_file:
      - .env
    depends_on:
      - comwork_cloud_api
    networks:
      - cloud_api
  comwork_cloud_otel_collector:
    restart: always
    image: otel/opentelemetry-collector:latest
    container_name: comwork_cloud_otel_collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - .docker/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"
      - "8888:8888"
      - "8889:8889"
      - "13133:13133"
      - "4317:4317"
      - "4318:4318"
      - "55679:55679"
    depends_on:
      - comwork_cloud_jaeger
    networks:
      - cloud_api
  comwork_cloud_jaeger:
    restart: always
    image: jaegertracing/all-in-one:latest
    container_name: comwork_cloud_jaeger
    ports:
      - "16686:16686"
    networks:
      - cloud_api
  comwork_cloud_prometheus:
    image: prom/prometheus
    container_name: comwork_cloud_prometheus
    ports:
     - 9090:9090
    volumes:
     - .docker/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
     - cloud_api
    restart: always
networks:
  cloud_api:
    driver: bridge

volumes:
  cwclouddata:
